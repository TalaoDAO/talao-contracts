{
  "contractName": "VaultFactory",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "nbVault",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "FreelanceVault",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "token",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getMyToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "CreateVaultContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632f0b9c7c1461008a57806334508820146100b55780637cdf75471461010c5780638da5cb5b14610163578063e5c6c2ea146101ba578063f2fde38b1461023d575b34801561008457600080fd5b50600080fd5b34801561009657600080fd5b5061009f610280565b6040518082815260200191505060405180910390f35b3480156100c157600080fd5b506100ca610286565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561011857600080fd5b50610121610647565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561016f57600080fd5b50610178610671565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c657600080fd5b506101fb600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610696565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561024957600080fd5b5061027e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106c9565b005b60015481565b6000806000806000925060009150600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c7c3cfc633336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001925050506040805180830381600087803b15801561038457600080fd5b505af1158015610398573d6000803e3d6000fd5b505050506040513d60408110156103ae57600080fd5b8101908080519060200190929190805190602001909291905050508093508194505050600115158315151415156103e457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415151561047f57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166104aa6107c1565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f0801580156104fc573d6000803e3d6000fd5b50905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061058a60015460016107a3565b508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561062657600080fd5b505af115801561063a573d6000803e3d6000fd5b5050505080935050505090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561072457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561076057600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008082840190508381101515156107b757fe5b8091505092915050565b60405161195f806107d2833901905600608060405234801561001057600080fd5b5060405160208061195f83398101806040528101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061189b806100c46000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633d4432d9146100b457806347286a18146100fd57806361a94e021461015c5780637ceffde6146101bf5780638da5cb5b14610204578063a0b9c6a31461025b578063c5a88369146102b2578063d129592914610318578063e2b2e4ab14610377578063f2fde38b146103ce578063fda2007e14610411575b600080fd5b3480156100c057600080fd5b506100e36004803603810190808035600019169060200190929190505050610476565b604051808215151515815260200191505060405180910390f35b34801561010957600080fd5b5061012860048036038101908080359060200190929190505050610749565b6040518084600019166000191681526020018360001916600019168152602001828152602001935050505060405180910390f35b34801561016857600080fd5b5061018b6004803603810190808035600019169060200190929190505050610918565b6040518084600019166000191681526020018360001916600019168152602001828152602001935050505060405180910390f35b3480156101cb57600080fd5b506101ee6004803603810190808035600019169060200190929190505050610b1a565b6040518082815260200191505060405180910390f35b34801561021057600080fd5b50610219610cb8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026757600080fd5b5061029860048036038101908080356000191690602001909291908035600019169060200190929190505050610cdd565b604051808215151515815260200191505060405180910390f35b3480156102be57600080fd5b506102eb600480360381019080803590602001909291908035600019169060200190929190505050610f4e565b60405180836000191660001916815260200182600019166000191681526020019250505060405180910390f35b34801561032457600080fd5b5061034760048036038101908080356000191690602001909291905050506111bf565b60405180846000191660001916815260200183151515158152602001828152602001935050505060405180910390f35b34801561038357600080fd5b506103b06004803603810190808035600019169060200190929190803590602001909291905050506111f6565b60405180826000191660001916815260200191505060405180910390f35b3480156103da57600080fd5b5061040f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506113a9565b005b34801561041d57600080fd5b5061045c600480360381019080803560001916906020019092919080356000191690602001909291908035600019169060200190929190505050611483565b604051808215151515815260200191505060405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104d357600080fd5b6000806000915060009050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c7c3cfc633336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001925050506040805180830381600087803b1580156105ce57600080fd5b505af11580156105e2573d6000803e3d6000fd5b505050506040513d60408110156105f857600080fd5b81019080805190602001909291908051906020019092919050505080925081935050506001151582151514151561062e57600080fd5b600060010284600019161415151561064557600080fd5b600060046000866000191660001916815260200190815260200160002050602060ff1614151561074257600160008154809291906001900391905055506004600085600019166000191681526020019081526020016000206000808201600090556001820160006106b69190611829565b6002820160006101000a81549060ff0219169055600382016000905550503373ffffffffffffffffffffffffffffffffffffffff167f633d0ee2d8f9e4f2534bb43a3d87348f48c3c4afb53968db2ece9a3d5f0688736002866040518083600281111561071f57fe5b60ff16815260200182600019166000191681526020019250505060405180910390a25b5050919050565b6000806000806000806000915060009050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c7c3cfc633336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001925050506040805180830381600087803b15801561084a57600080fd5b505af115801561085e573d6000803e3d6000fd5b505050506040513d604081101561087457600080fd5b8101908080519060200190929190805190602001909291905050508092508193505050600115158215151415156108aa57600080fd5b6003878154811015156108b957fe5b906000526020600020015492508260046000856000191660001916815260200190815260200160002060000154600460008660001916600019168152602001908152602001600020600101805490509550955095505050509193909250565b600080600080600080915060009050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c7c3cfc633336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001925050506040805180830381600087803b158015610a1757600080fd5b505af1158015610a2b573d6000803e3d6000fd5b505050506040513d6040811015610a4157600080fd5b810190808051906020019092919080519060200190929190505050809250819350505060011515821515141515610a7757600080fd5b6000600102866000191614158015610abe57506001151560046000886000191660001916815260200190815260200160002060020160009054906101000a900460ff161515145b1515610ac957600080fd5b85600460008860001916600019168152602001908152602001600020600001546004600089600019166000191681526020019081526020016000206001018054905094509450945050509193909250565b600080600080915060009050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c7c3cfc633336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001925050506040805180830381600087803b158015610c1657600080fd5b505af1158015610c2a573d6000803e3d6000fd5b505050506040513d6040811015610c4057600080fd5b810190808051906020019092919080519060200190929190505050809250819350505060011515821515141515610c7657600080fd5b6000600102846000191614151515610c8d57600080fd5b6004600085600019166000191681526020019081526020016000206001018054905092505050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d3a57600080fd5b6000806000915060009050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c7c3cfc633336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001925050506040805180830381600087803b158015610e3557600080fd5b505af1158015610e49573d6000803e3d6000fd5b505050506040513d6040811015610e5f57600080fd5b810190808051906020019092919080519060200190929190505050809250819350505060011515821515141515610e9557600080fd5b6000600102856000191614158015610eb257506000602060ff1614155b1515610ebd57600080fd5b60046000866000191660001916815260200190815260200160002060020160009054906101000a900460ff161515610ef457600080fd5b60046000866000191660001916815260200190815260200160002060010184908060018154018082558091505090600182039060005260206000200160009091929091909150906000191690555060019250505092915050565b600080600080600080600080915060009050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c7c3cfc633336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001925050506040805180830381600087803b15801561105057600080fd5b505af1158015611064573d6000803e3d6000fd5b505050506040513d604081101561107a57600080fd5b8101908080519060200190929190805190602001909291905050508092508193505050600115158215151415156110b057600080fd5b6003898154811015156110bf57fe5b90600052602060002001549450600092505b600460008660001916600019168152602001908152602001600020600101805490508310156111b2576004600086600019166000191681526020019081526020016000206001018381548110151561112557fe5b90600052602060002001549350876040518082600019166000191681526020019150506040518091039020600019168460405180826000191660001916815260200191505060405180910390206000191614156111a5578460046000876000191660001916815260200190815260200160002060000154965096506111b3565b82806001019350506110d1565b5b50505050509250929050565b60046020528060005260406000206000915090508060000154908060020160009054906101000a900460ff16908060030154905083565b600080600080915060009050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c7c3cfc633336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001925050506040805180830381600087803b1580156112f257600080fd5b505af1158015611306573d6000803e3d6000fd5b505050506040513d604081101561131c57600080fd5b81019080805190602001909291908051906020019092919050505080925081935050506001151582151514151561135257600080fd5b600060010285600019161415151561136957600080fd5b6004600086600019166000191681526020019081526020016000206001018481548110151561139457fe5b90600052602060002001549250505092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561140457600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561144057600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114e057600080fd5b6000806000915060009050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c7c3cfc633336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001925050506040805180830381600087803b1580156115db57600080fd5b505af11580156115ef573d6000803e3d6000fd5b505050506040513d604081101561160557600080fd5b81019080805190602001909291908051906020019092919050505080925081935050506001151582151514151561163b57600080fd5b600060010286600019161415801561165857506000602060ff1614155b151561166357600080fd5b60046000876000191660001916815260200190815260200160002060020160009054906101000a900460ff1615151561169b57600080fd5b600160008154809291906001019190505550846004600088600019166000191681526020019081526020016000206000018160001916905550600160046000886000191660001916815260200190815260200160002060020160006101000a81548160ff02191690831515021790555060016003879080600181540180825580915050906001820390600052602060002001600090919290919091509060001916905503600460008860001916600019168152602001908152602001600020600301819055506004600087600019166000191681526020019081526020016000206001018490806001815401808255809150509060018203906000526020600020016000909192909190915090600019169055503373ffffffffffffffffffffffffffffffffffffffff167f633d0ee2d8f9e4f2534bb43a3d87348f48c3c4afb53968db2ece9a3d5f068873600188604051808360028111156117fa57fe5b60ff16815260200182600019166000191681526020019250505060405180910390a26001925050509392505050565b5080546000825590600052602060002090810190611847919061184a565b50565b61186c91905b80821115611868576000816000905550600101611850565b5090565b905600a165627a7a7230582022a98037da80d633712e765a2521e4d8da24f809b58cf72ef587ed2f4753f6620029a165627a7a723058205df0f7a01d2d60a3cec14ee69e890508cfcf03e23be374647f275873139a2ac00029",
  "sourceMap": "116:1632:3:-;;;594:102;8:9:-1;5:2;;;30:1;27;20:12;5:2;594:102:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1461:10:1;1453:5;;:18;;;;;;;;;;;;;;;;;;682:5:3;661:7;;:27;;;;;;;;;;;;;;;;;;594:102;116:1632;;;;;;",
  "deployedSourceMap": "116:1632:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;116:1632:3;1729:8;;;156:19;;8:9:-1;5:2;;;30:1;27;20:12;5:2;156:19:3;;;;;;;;;;;;;;;;;;;;;;;949:652;;8:9:-1;5:2;;;30:1;27;20:12;5:2;949:652:3;;;;;;;;;;;;;;;;;;;;;;;;;;;704:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;704:94:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1166:20:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1166:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;337:48:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;337:48:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1828:215:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1828:215:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;156:19:3;;;;:::o;949:652::-;1006:7;1109:14;1142:11;1349:14;1126:5;1109:22;;1156:1;1142:15;;1190:7;;;;;;;;;;;:23;;;1214:10;1225;1190:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1190:46:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1190:46:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1190:46:3;;;;;;;;;;;;;;;;;;;;;;;;;1168:68;;;;;;;;1271:4;1258:17;;:9;:17;;;1249:27;;;;;;;;1333:1;1295:40;;:14;:26;1310:10;1295:26;;;;;;;;;;;;;;;;;;;;;;;;;:40;;;;1287:49;;;;;;;;1376:7;;;;;;;;;;;1366:18;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1366:18:3;1349:35;;1432:8;1395:14;:26;1410:10;1395:26;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;1452:23;1465:7;;1473:1;1452:12;:23::i;:::-;;1520:8;:26;;;1547:10;1520:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1520:38:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1520:38:3;;;;1584:8;1569:24;;949:652;;;;:::o;704:94::-;751:7;783;;;;;;;;;;;776:14;;704:94;:::o;1166:20:1:-;;;;;;;;;;;;;:::o;337:48:3:-;;;;;;;;;;;;;;;;;;;;;;:::o;1828:215:1:-;1626:5;;;;;;;;;;;1612:19;;:10;:19;;;1604:28;;;;;;;;1955:1;1935:22;;:8;:22;;;;1927:31;;;;;;;;2027:8;2019:5;;:16;;;;;;;;;;;;;;;;;;1828:215;:::o;789:147::-;847:7;867:9;883:1;879;:5;867:17;;907:1;902;:6;;895:14;;;;;;927:1;920:8;;789:147;;;;;:::o;116:1632:3:-;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.21;\r\n\r\nimport \"./Vault.sol\";\r\n//import \"./MainContracts.sol\";\r\nimport \"./TestContract.sol\";\r\n\r\ncontract VaultFactory is Ownable {\r\n    uint public nbVault;\r\n    TalaoToken myToken;\r\n\r\n    //first address is Talent ethereum address \r\n    //second address is Smart Contract vault address dedicated to this talent\r\n    mapping (address=>address) public FreelanceVault; \r\n\r\n    // enum VaultState { AccessDenied, AlreadyExist, Created }\r\n\r\n    // event VaultCreation(address indexed talent, address vaultadddress, VaultState msg);\r\n\r\n    //address du smart contract token\r\n    function VaultFactory(address token) \r\n    public \r\n    {\r\n        myToken = TalaoToken(token);\r\n    }\r\n\r\n    function getMyToken()\r\n    public\r\n    returns(address)\r\n    {\r\n        return myToken;\r\n    }\r\n\r\n    /**\r\n     * Talent can call this method to create a new Vault contract\r\n     *  with the maker being the owner of this new vault\r\n     */\r\n    function CreateVaultContract ()\r\n    public\r\n    returns(address)\r\n    {\r\n        //Verify using Talao token if sender is authorized to create a Vault\r\n        bool agreement = false;\r\n        uint unused = 0;\r\n        (agreement, unused) = myToken.AccessAllowance(msg.sender,msg.sender);\r\n\r\n        require (agreement == true);\r\n        require(FreelanceVault[msg.sender] != address(0));\r\n\r\n        Vault newVault = new Vault(myToken);\r\n        FreelanceVault[msg.sender] = address(newVault);\r\n        SafeMath.add(nbVault,1); //nbVault++; //utiliser safe math\r\n        newVault.transferOwnership(msg.sender);\r\n        return address(newVault);\r\n    }\r\n\r\n    /**\r\n     * Prevents accidental sending of ether to the factory\r\n     */\r\n    function () \r\n    public \r\n    {\r\n        revert();\r\n    }\r\n}",
  "sourcePath": "C:\\Sources\\GITTALAO\\proto-vault\\contracts\\VaultFactory.sol",
  "ast": {
    "absolutePath": "/C/Sources/GITTALAO/proto-vault/contracts/VaultFactory.sol",
    "exportedSymbols": {
      "VaultFactory": [
        769
      ]
    },
    "id": 770,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 652,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/C/Sources/GITTALAO/proto-vault/contracts/Vault.sol",
        "file": "./Vault.sol",
        "id": 653,
        "nodeType": "ImportDirective",
        "scope": 770,
        "sourceUnit": 651,
        "src": "28:21:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Sources/GITTALAO/proto-vault/contracts/TestContract.sol",
        "file": "./TestContract.sol",
        "id": 654,
        "nodeType": "ImportDirective",
        "scope": 770,
        "sourceUnit": 221,
        "src": "84:28:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 655,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 220,
              "src": "141:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$220",
                "typeString": "contract Ownable"
              }
            },
            "id": 656,
            "nodeType": "InheritanceSpecifier",
            "src": "141:7:3"
          }
        ],
        "contractDependencies": [
          220,
          650
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 769,
        "linearizedBaseContracts": [
          769,
          220
        ],
        "name": "VaultFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 658,
            "name": "nbVault",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "156:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 657,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "156:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 660,
            "name": "myToken",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "182:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TalaoToken_$171",
              "typeString": "contract TalaoToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 659,
              "name": "TalaoToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 171,
              "src": "182:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TalaoToken_$171",
                "typeString": "contract TalaoToken"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 664,
            "name": "FreelanceVault",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "337:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 663,
              "keyType": {
                "id": 661,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "346:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "337:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 662,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "355:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 675,
              "nodeType": "Block",
              "src": "650:46:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 669,
                      "name": "myToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "661:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TalaoToken_$171",
                        "typeString": "contract TalaoToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 671,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 666,
                          "src": "682:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 670,
                        "name": "TalaoToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "671:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TalaoToken_$171_$",
                          "typeString": "type(contract TalaoToken)"
                        }
                      },
                      "id": 672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "671:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TalaoToken_$171",
                        "typeString": "contract TalaoToken"
                      }
                    },
                    "src": "661:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TalaoToken_$171",
                      "typeString": "contract TalaoToken"
                    }
                  },
                  "id": 674,
                  "nodeType": "ExpressionStatement",
                  "src": "661:27:3"
                }
              ]
            },
            "documentation": null,
            "id": 676,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "VaultFactory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 666,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "616:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 665,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "615:15:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "650:0:3"
            },
            "scope": 769,
            "src": "594:102:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 683,
              "nodeType": "Block",
              "src": "765:33:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 681,
                    "name": "myToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 660,
                    "src": "783:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TalaoToken_$171",
                      "typeString": "contract TalaoToken"
                    }
                  },
                  "functionReturnParameters": 680,
                  "id": 682,
                  "nodeType": "Return",
                  "src": "776:14:3"
                }
              ]
            },
            "documentation": null,
            "id": 684,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getMyToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "723:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 679,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 684,
                  "src": "751:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "751:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "750:9:3"
            },
            "scope": 769,
            "src": "704:94:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 760,
              "nodeType": "Block",
              "src": "1020:581:3",
              "statements": [
                {
                  "assignments": [
                    690
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 690,
                      "name": "agreement",
                      "nodeType": "VariableDeclaration",
                      "scope": 761,
                      "src": "1109:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 689,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1109:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 692,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1126:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1109:22:3"
                },
                {
                  "assignments": [
                    694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 694,
                      "name": "unused",
                      "nodeType": "VariableDeclaration",
                      "scope": 761,
                      "src": "1142:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 693,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1142:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 696,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1156:1:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1142:15:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 697,
                          "name": "agreement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 690,
                          "src": "1169:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 698,
                          "name": "unused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 694,
                          "src": "1180:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 699,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1168:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 702,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 784,
                            "src": "1214:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1214:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 704,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 784,
                            "src": "1225:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1225:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 700,
                          "name": "myToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 660,
                          "src": "1190:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TalaoToken_$171",
                            "typeString": "contract TalaoToken"
                          }
                        },
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "AccessAllowance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 170,
                        "src": "1190:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$_t_uint256_$",
                          "typeString": "function (address,address) view external returns (bool,uint256)"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1190:46:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256)"
                      }
                    },
                    "src": "1168:68:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "1168:68:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 710,
                          "name": "agreement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 690,
                          "src": "1258:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1271:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1258:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 709,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        787,
                        788
                      ],
                      "referencedDeclaration": 787,
                      "src": "1249:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1249:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 714,
                  "nodeType": "ExpressionStatement",
                  "src": "1249:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 716,
                            "name": "FreelanceVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 664,
                            "src": "1295:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 719,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 717,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 784,
                              "src": "1310:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1310:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1295:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1333:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1325:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1325:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1295:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 715,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        787,
                        788
                      ],
                      "referencedDeclaration": 787,
                      "src": "1287:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1287:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "1287:49:3"
                },
                {
                  "assignments": [
                    727
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 727,
                      "name": "newVault",
                      "nodeType": "VariableDeclaration",
                      "scope": 761,
                      "src": "1349:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vault_$650",
                        "typeString": "contract Vault"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 726,
                        "name": "Vault",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 650,
                        "src": "1349:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$650",
                          "typeString": "contract Vault"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 732,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 730,
                        "name": "myToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 660,
                        "src": "1376:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TalaoToken_$171",
                          "typeString": "contract TalaoToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TalaoToken_$171",
                          "typeString": "contract TalaoToken"
                        }
                      ],
                      "id": 729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1366:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Vault_$650_$",
                        "typeString": "function (address) returns (contract Vault)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 728,
                        "name": "Vault",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 650,
                        "src": "1370:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$650",
                          "typeString": "contract Vault"
                        }
                      }
                    },
                    "id": 731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1366:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Vault_$650",
                      "typeString": "contract Vault"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1349:35:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 733,
                        "name": "FreelanceVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 664,
                        "src": "1395:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 736,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 734,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "1410:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1410:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1395:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 738,
                          "name": "newVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 727,
                          "src": "1432:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vault_$650",
                            "typeString": "contract Vault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Vault_$650",
                            "typeString": "contract Vault"
                          }
                        ],
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1424:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1424:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1395:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 741,
                  "nodeType": "ExpressionStatement",
                  "src": "1395:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 745,
                        "name": "nbVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 658,
                        "src": "1465:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1473:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 742,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "1452:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$154_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 153,
                      "src": "1452:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1452:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 748,
                  "nodeType": "ExpressionStatement",
                  "src": "1452:23:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 752,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "1547:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1547:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 749,
                        "name": "newVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 727,
                        "src": "1520:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$650",
                          "typeString": "contract Vault"
                        }
                      },
                      "id": 751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 219,
                      "src": "1520:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1520:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 755,
                  "nodeType": "ExpressionStatement",
                  "src": "1520:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 757,
                        "name": "newVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 727,
                        "src": "1584:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$650",
                          "typeString": "contract Vault"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Vault_$650",
                          "typeString": "contract Vault"
                        }
                      ],
                      "id": 756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1576:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1576:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 688,
                  "id": 759,
                  "nodeType": "Return",
                  "src": "1569:24:3"
                }
              ]
            },
            "documentation": "Talent can call this method to create a new Vault contract\r\n with the maker being the owner of this new vault\r",
            "id": 761,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "CreateVaultContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 687,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 761,
                  "src": "1006:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1005:9:3"
            },
            "scope": 769,
            "src": "949:652:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 767,
              "nodeType": "Block",
              "src": "1718:27:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 764,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        789,
                        790
                      ],
                      "referencedDeclaration": 789,
                      "src": "1729:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 766,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:8:3"
                }
              ]
            },
            "documentation": "Prevents accidental sending of ether to the factory\r",
            "id": 768,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1696:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1718:0:3"
            },
            "scope": 769,
            "src": "1687:58:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 770,
        "src": "116:1632:3"
      }
    ],
    "src": "0:1748:3"
  },
  "legacyAST": {
    "absolutePath": "/C/Sources/GITTALAO/proto-vault/contracts/VaultFactory.sol",
    "exportedSymbols": {
      "VaultFactory": [
        769
      ]
    },
    "id": 770,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 652,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:3"
      },
      {
        "absolutePath": "/C/Sources/GITTALAO/proto-vault/contracts/Vault.sol",
        "file": "./Vault.sol",
        "id": 653,
        "nodeType": "ImportDirective",
        "scope": 770,
        "sourceUnit": 651,
        "src": "28:21:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Sources/GITTALAO/proto-vault/contracts/TestContract.sol",
        "file": "./TestContract.sol",
        "id": 654,
        "nodeType": "ImportDirective",
        "scope": 770,
        "sourceUnit": 221,
        "src": "84:28:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 655,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 220,
              "src": "141:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$220",
                "typeString": "contract Ownable"
              }
            },
            "id": 656,
            "nodeType": "InheritanceSpecifier",
            "src": "141:7:3"
          }
        ],
        "contractDependencies": [
          220,
          650
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 769,
        "linearizedBaseContracts": [
          769,
          220
        ],
        "name": "VaultFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 658,
            "name": "nbVault",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "156:19:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 657,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "156:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 660,
            "name": "myToken",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "182:18:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TalaoToken_$171",
              "typeString": "contract TalaoToken"
            },
            "typeName": {
              "contractScope": null,
              "id": 659,
              "name": "TalaoToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 171,
              "src": "182:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TalaoToken_$171",
                "typeString": "contract TalaoToken"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 664,
            "name": "FreelanceVault",
            "nodeType": "VariableDeclaration",
            "scope": 769,
            "src": "337:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 663,
              "keyType": {
                "id": 661,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "346:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "337:26:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 662,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "355:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 675,
              "nodeType": "Block",
              "src": "650:46:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 669,
                      "name": "myToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 660,
                      "src": "661:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TalaoToken_$171",
                        "typeString": "contract TalaoToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 671,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 666,
                          "src": "682:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 670,
                        "name": "TalaoToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "671:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TalaoToken_$171_$",
                          "typeString": "type(contract TalaoToken)"
                        }
                      },
                      "id": 672,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "671:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TalaoToken_$171",
                        "typeString": "contract TalaoToken"
                      }
                    },
                    "src": "661:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TalaoToken_$171",
                      "typeString": "contract TalaoToken"
                    }
                  },
                  "id": 674,
                  "nodeType": "ExpressionStatement",
                  "src": "661:27:3"
                }
              ]
            },
            "documentation": null,
            "id": 676,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "VaultFactory",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 666,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "616:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 665,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "615:15:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "650:0:3"
            },
            "scope": 769,
            "src": "594:102:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 683,
              "nodeType": "Block",
              "src": "765:33:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 681,
                    "name": "myToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 660,
                    "src": "783:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TalaoToken_$171",
                      "typeString": "contract TalaoToken"
                    }
                  },
                  "functionReturnParameters": 680,
                  "id": 682,
                  "nodeType": "Return",
                  "src": "776:14:3"
                }
              ]
            },
            "documentation": null,
            "id": 684,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getMyToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "723:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 679,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 684,
                  "src": "751:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "751:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "750:9:3"
            },
            "scope": 769,
            "src": "704:94:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 760,
              "nodeType": "Block",
              "src": "1020:581:3",
              "statements": [
                {
                  "assignments": [
                    690
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 690,
                      "name": "agreement",
                      "nodeType": "VariableDeclaration",
                      "scope": 761,
                      "src": "1109:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 689,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1109:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 692,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1126:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1109:22:3"
                },
                {
                  "assignments": [
                    694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 694,
                      "name": "unused",
                      "nodeType": "VariableDeclaration",
                      "scope": 761,
                      "src": "1142:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 693,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1142:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 696,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1156:1:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1142:15:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 697,
                          "name": "agreement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 690,
                          "src": "1169:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 698,
                          "name": "unused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 694,
                          "src": "1180:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 699,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1168:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 702,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 784,
                            "src": "1214:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1214:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 704,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 784,
                            "src": "1225:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1225:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 700,
                          "name": "myToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 660,
                          "src": "1190:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TalaoToken_$171",
                            "typeString": "contract TalaoToken"
                          }
                        },
                        "id": 701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "AccessAllowance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 170,
                        "src": "1190:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$_t_uint256_$",
                          "typeString": "function (address,address) view external returns (bool,uint256)"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1190:46:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                        "typeString": "tuple(bool,uint256)"
                      }
                    },
                    "src": "1168:68:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 708,
                  "nodeType": "ExpressionStatement",
                  "src": "1168:68:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 710,
                          "name": "agreement",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 690,
                          "src": "1258:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1271:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1258:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 709,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        787,
                        788
                      ],
                      "referencedDeclaration": 787,
                      "src": "1249:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1249:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 714,
                  "nodeType": "ExpressionStatement",
                  "src": "1249:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 716,
                            "name": "FreelanceVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 664,
                            "src": "1295:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 719,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 717,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 784,
                              "src": "1310:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1310:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1295:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1333:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1325:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1325:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1295:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 715,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        787,
                        788
                      ],
                      "referencedDeclaration": 787,
                      "src": "1287:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1287:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "1287:49:3"
                },
                {
                  "assignments": [
                    727
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 727,
                      "name": "newVault",
                      "nodeType": "VariableDeclaration",
                      "scope": 761,
                      "src": "1349:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vault_$650",
                        "typeString": "contract Vault"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 726,
                        "name": "Vault",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 650,
                        "src": "1349:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$650",
                          "typeString": "contract Vault"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 732,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 730,
                        "name": "myToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 660,
                        "src": "1376:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TalaoToken_$171",
                          "typeString": "contract TalaoToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TalaoToken_$171",
                          "typeString": "contract TalaoToken"
                        }
                      ],
                      "id": 729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1366:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Vault_$650_$",
                        "typeString": "function (address) returns (contract Vault)"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 728,
                        "name": "Vault",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 650,
                        "src": "1370:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$650",
                          "typeString": "contract Vault"
                        }
                      }
                    },
                    "id": 731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1366:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Vault_$650",
                      "typeString": "contract Vault"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1349:35:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 733,
                        "name": "FreelanceVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 664,
                        "src": "1395:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 736,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 734,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "1410:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1410:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1395:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 738,
                          "name": "newVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 727,
                          "src": "1432:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vault_$650",
                            "typeString": "contract Vault"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Vault_$650",
                            "typeString": "contract Vault"
                          }
                        ],
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1424:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1424:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1395:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 741,
                  "nodeType": "ExpressionStatement",
                  "src": "1395:46:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 745,
                        "name": "nbVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 658,
                        "src": "1465:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1473:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 742,
                        "name": "SafeMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "1452:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeMath_$154_$",
                          "typeString": "type(library SafeMath)"
                        }
                      },
                      "id": 744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 153,
                      "src": "1452:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1452:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 748,
                  "nodeType": "ExpressionStatement",
                  "src": "1452:23:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 752,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 784,
                          "src": "1547:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1547:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 749,
                        "name": "newVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 727,
                        "src": "1520:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$650",
                          "typeString": "contract Vault"
                        }
                      },
                      "id": 751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 219,
                      "src": "1520:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1520:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 755,
                  "nodeType": "ExpressionStatement",
                  "src": "1520:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 757,
                        "name": "newVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 727,
                        "src": "1584:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vault_$650",
                          "typeString": "contract Vault"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Vault_$650",
                          "typeString": "contract Vault"
                        }
                      ],
                      "id": 756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1576:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1576:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 688,
                  "id": 759,
                  "nodeType": "Return",
                  "src": "1569:24:3"
                }
              ]
            },
            "documentation": "Talent can call this method to create a new Vault contract\r\n with the maker being the owner of this new vault\r",
            "id": 761,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "CreateVaultContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "978:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 687,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 761,
                  "src": "1006:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1005:9:3"
            },
            "scope": 769,
            "src": "949:652:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 767,
              "nodeType": "Block",
              "src": "1718:27:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 764,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        789,
                        790
                      ],
                      "referencedDeclaration": 789,
                      "src": "1729:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 766,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:8:3"
                }
              ]
            },
            "documentation": "Prevents accidental sending of ether to the factory\r",
            "id": 768,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1696:2:3"
            },
            "payable": false,
            "returnParameters": {
              "id": 763,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1718:0:3"
            },
            "scope": 769,
            "src": "1687:58:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 770,
        "src": "116:1632:3"
      }
    ],
    "src": "0:1748:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-20T08:21:43.385Z"
}